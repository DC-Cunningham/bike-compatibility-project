{"ast":null,"code":"import _defineProperty from \"/Users/dc/Revolution Research/The Beautiful Revolution/Monash_Uni/Homework/bike-compatibility-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/dc/Revolution Research/The Beautiful Revolution/Monash_Uni/Homework/bike-compatibility-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/dc/Revolution Research/The Beautiful Revolution/Monash_Uni/Homework/bike-compatibility-project/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/dc/Revolution Research/The Beautiful Revolution/Monash_Uni/Homework/bike-compatibility-project/client/src/pages/Components.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Components() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      components = _useState2[0],\n      setComponents = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Load all components and store them with setComponents\n\n\n  useEffect(function () {\n    loadComponents();\n  }, []); // Loads all components and sets them to components\n\n  function loadComponents() {\n    API.getComponents().then(function (res) {\n      return setComponents(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Deletes a component from the database with a given id, then reloads components from the db\n\n\n  function deleteComponent(id) {\n    API.deleteComponent(id).then(function (res) {\n      return loadComponents();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  } // When the form is submitted, use the API.savecomponent method to save the component data\n  // Then reload components from the database\n\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.name && formObject.type && formObject.manufacturerSKU) {\n      API.saveComponent({\n        name: formObject.name,\n        type: formObject.type,\n        manufacturerSKU: formObject.manufacturerSKU,\n        description: formObject.description\n      }).then(function (res) {\n        return loadComponents();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"What Component are you trying to work out?\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"name\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"type\",\n    placeholder: \"Component Type (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"description\",\n    placeholder: \"Description (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.name && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Submit Component\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Saved Components\")), components.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, components.map(function (component) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      key: component._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/components/\" + component._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, component.name, \" by \", component.type)), /*#__PURE__*/React.createElement(DeleteBtn, {\n      onClick: function onClick() {\n        return deleteComponent(component._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"No Results to Display\"))));\n}\n\nexport default Components;","map":{"version":3,"sources":["/Users/dc/Revolution Research/The Beautiful Revolution/Monash_Uni/Homework/bike-compatibility-project/client/src/pages/Components.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Components","components","setComponents","formObject","setFormObject","loadComponents","getComponents","then","res","data","catch","err","console","log","deleteComponent","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","type","manufacturerSKU","saveComponent","description","title","length","map","component","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Components() {\n  // Setting our component's initial state\n  const [components, setComponents] = useState([]);\n  const [formObject, setFormObject] = useState({});\n\n  // Load all components and store them with setComponents\n  useEffect(() => {\n    loadComponents();\n  }, []);\n\n  // Loads all components and sets them to components\n  function loadComponents() {\n    API.getComponents()\n      .then((res) => setComponents(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  // Deletes a component from the database with a given id, then reloads components from the db\n  function deleteComponent(id) {\n    API.deleteComponent(id)\n      .then((res) => loadComponents())\n      .catch((err) => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value });\n  }\n\n  // When the form is submitted, use the API.savecomponent method to save the component data\n  // Then reload components from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.name && formObject.type && formObject.manufacturerSKU) {\n      API.saveComponent({\n        name: formObject.name,\n        type: formObject.type,\n        manufacturerSKU: formObject.manufacturerSKU,\n        description: formObject.description,\n      })\n        .then((res) => loadComponents())\n        .catch((err) => console.log(err));\n    }\n  }\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-6\">\n          <Jumbotron>\n            <h1>What Component are you trying to work out?</h1>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={handleInputChange}\n              name=\"name\"\n              placeholder=\"Title (required)\"\n            />\n            <Input\n              onChange={handleInputChange}\n              name=\"type\"\n              placeholder=\"Component Type (required)\"\n            />\n            <TextArea\n              onChange={handleInputChange}\n              name=\"description\"\n              placeholder=\"Description (Optional)\"\n            />\n            <FormBtn\n              disabled={!(formObject.name && formObject.title)}\n              onClick={handleFormSubmit}\n            >\n              Submit Component\n            </FormBtn>\n          </form>\n        </Col>\n        <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h1>Saved Components</h1>\n          </Jumbotron>\n          {components.length ? (\n            <List>\n              {components.map((component) => (\n                <ListItem key={component._id}>\n                  <Link to={\"/components/\" + component._id}>\n                    <strong>\n                      {component.name} by {component.type}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => deleteComponent(component._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n            <h3>No Results to Display</h3>\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Components;\n"]},"metadata":{},"sourceType":"module"}